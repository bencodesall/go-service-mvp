# Build the Go Binary.
FROM golang:1.16.4 as build_app-api
# Enforce pure Golang without any os-level dependencies
ENV CGO_ENABLED 0
# ???
ARG VCS_REF

# OPTIONAL: IF NOT VENDORING IN THE PROJECT
# Copy the module files first and then download the dependencies. IF this
# doesn't change, we won't need to do this again in future builds.
#COPY go.* /service/
#WORKDIR /service
#RUN go mod download

# Create a locatio in the container for the source code. Using the default
# GOPATH location
RUN mkdir -p /service

# Copy the source code into the container
WORKDIR /service
COPY . .

# Build the service binary. We are doing this last since this will be different
# every time we run through this process.
WORKDIR /service/app/app-api
RUN go build -ldflags "-X main.build=${VCS_REF}"

# Run the Go Binary in Alpine
FROM alpine:3.14
ARG BUILD_DATE
ARG VCS_REF
COPY --from=build_app-api /service/private.pem /service/private.pem
COPY --from=build_app-api /service/app/app-api/app-api /service/app-api
WORKDIR /service
CMD ["./app-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="app-api" \
      org.opencontainers.image.authors="Ben Nowak <bencodesall@gmail.com>" \
      org.opencontainers.image.source="https://github.com/bencodesall/service/app/app-api" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="Bencodesall"